<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.kungreat.flybbs.mapper.DetailsTextMapper">
  <resultMap id="BaseResultMap" type="cn.kungreat.flybbs.domain.DetailsText">
    <id column="id" property="id" />
    <result column="is_adoption" property="isAdoption" />
    <result column="like_number" property="likeNumber" />
    <result column="port_id" property="portId" />
    <result column="user_account" property="userAccount" />
    <result column="create_data" property="createData" />
    <result column="auth_flag" property="authFlag" />
    <result column="details_text" property="detailsText" />
    <result column="is_port" property="isPort" />
    <result column="like_account" property="likeAccount" />
    <result column="alias" jdbcType="VARCHAR" property="alias" />
    <result column="img" jdbcType="VARCHAR" property="userImg" />
    <result column="vip_level"  property="vipLevel"/>
    <result column="authenticate"  property="authenticate" />
    <result column="is_manager"  property="isManager" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="cn.kungreat.flybbs.query.DetailsTextQuery">
    delete from ${tableName}
    where id = #{id}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.kungreat.flybbs.domain.DetailsText" useGeneratedKeys="true">
    insert into ${tableName} (like_number,is_adoption ,port_id,
      user_account, create_data, auth_flag,
      details_text, is_port)
    values (0, 0,#{portId},
      #{userAccount}, #{createData}, #{authFlag},
      #{detailsText}, #{isPort})
  </insert>
  <update id="updateByPrimaryKey">
    update ${tableName}
    set
      details_text = #{detailsText,jdbcType=LONGVARCHAR},
      auth_flag = #{authFlag}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateByPortId">
    update ${tableName}
    set
      details_text = #{detailsText,jdbcType=LONGVARCHAR},
      auth_flag = #{authFlag}
    where port_id = #{portId} and is_port=1
  </update>

    <update id="updateLikeAccount">
       update ${tableName}
    set
      like_account = #{likeAccount},
      like_number = like_number+1
    where id = #{id,jdbcType=BIGINT} and like_number=#{likeNumber}
    </update>

  <update id="updateAdoption">
    update ${tableName}
    set
      is_adoption = 1
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap">
    select id, is_adoption, like_number, port_id, user_account, create_data, auth_flag,
    details_text, is_port
    from ${tableName}
    where id = #{id,jdbcType=BIGINT} and auth_flag = #{portIsauth}
  </select>

  <select id="selectByPort" parameterType="cn.kungreat.flybbs.domain.DetailsText" resultMap="BaseResultMap">
    select id, is_adoption, like_number, port_id, user_account, create_data, auth_flag,
    details_text, is_port
    from  ${tableName}  where port_id = #{portId} and is_port=1 and auth_flag = #{portIsauth}
  </select>

  <select id="selectCount" resultType="java.lang.Integer">
    select count(id) from ${tableName}
    <include refid="baseQuery"/>
  </select>

  <select id="selectAll" resultMap="BaseResultMap">
    select * from (select id, is_adoption, like_number, port_id, user_account, create_data, auth_flag,
    details_text, is_port
    from ${tableName} <include refid="baseQuery"/> <include refid="baseOrder"/> limit #{start},#{pageSize})
    as portDetails Inner join user us on portDetails.user_account = us.account
  </select>

  <select id="selectLikeAccount" resultMap="BaseResultMap">
    select like_account,like_number from ${tableName} where id=#{id}
  </select>

  <sql id="baseQuery">
    <where>
      <if test="portId != null">
        and port_id = #{portId} and is_port!=1
      </if>
      <if test="portIsauth != 0">
        and auth_flag = 1
      </if>
    </where>
  </sql>

  <sql id="baseOrder">
    <if test="orderType != null and orderType != ''">
      ORDER BY ${orderType} DESC
    </if>
  </sql>
</mapper>